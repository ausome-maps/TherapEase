version: '3.7'

services:
  frontend:
    container_name: therapease_frontend
    image: ghcr.io/ausome-maps/therapease-ui:latest
    command: node server/index.mjs
    env_file:
      - ./.env.therapease
    expose:
      - 9002
    depends_on:
      - api
    labels:
      - traefik.http.routers.client.rule=Host(`{{therapease_ui_domain_name}}`) 
      - traefik.http.routers.client.tls=true
      - traefik.http.routers.client.tls.certresolver=lets-encrypt
      - traefik.port=80
    networks:
      - internal
      - web
  api:
    container_name: therapease_api
    image: ghcr.io/ausome-maps/therapease-api:latest
    command: gunicorn django_app.wsgi:application --limit-request-line 8190  --workers 2 --bind 0.0.0.0:9001 --timeout 30 --max-requests 300
    expose:
      - 9001
    env_file:
      - ./.env.therapease
    labels:
      - "traefik.http.routers.api.rule=Host(`{{therapease_api_domain_name}}`)" # need to be configured in DNS registrar
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=lets-encrypt"
      - "traefik.port=80"
    depends_on:
      - cache
      - db
    networks:
      - internal
      - web
  db:
    container_name: therapease_db
    image: postgres:15.4-alpine3.18
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.therapease
    networks:
      - internal
    labels:
      - traefik.enable=false 
  cache:
    container_name: therapease_cache
    image: redis:6.0.20-alpine3.18
    networks:
      - internal
    labels:
      - traefik.enable=false

volumes:
  postgres_data:
    driver: local
    driver_opts:
      o: 'bind'
      device: /datadrive/postgres
      type: 'none'

networks:
  web:
    external: true
  internal:
    external: false